/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.appjava;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Rodrigo
 */
public class AppJavaUI extends javax.swing.JFrame {
    
    DefaultTableModel model = new DefaultTableModel();
    

    /**
     * Creates new form AppJavaUI
     */
    public AppJavaUI() {
        initComponents();
        crearTabla();


        //Poblar tabla (prueba).
        String Datos[] = new String [10];
        Datos[0] = "1";
        Datos[1] = "Leanne Graham";
        Datos[2] = "Bret";
        Datos[3] = "Sincere@april.biz";
        Datos[4] = "Kulas Light, Apt. 556, Gwenborough, 92998-3874";
        Datos[5] = "-37.3159";
        Datos[6] = "81.1496";
        Datos[7] = "1-770-736-8031 x56442";
        Datos[8] = "hildergard.org";
        Datos[9] = "Romaguera-Crona";
        model.addRow(Datos);
        
        String Datos2[] = new String [10];
        Datos2[0] = "2";
        Datos2[1] = "Ervin Howell";
        Datos2[2] = "Antonette";
        Datos2[3] = "Shanna@melissa.tv";
        Datos2[4] = "Victor Plains, Suite 879, Wisokyburgh, 90566-7771";
        Datos2[5] = "-43.9509";
        Datos2[6] = "-34.4618";
        Datos2[7] = "010-692-6593 x09125";
        Datos2[8] = "anastasia.net";
        Datos2[9] = "Deckow-Crist";
        model.addRow(Datos2);
        
    }
    
    public void crearTabla(){
        // Crear tabla.
        model.addColumn("id");
        model.addColumn("Name");
        model.addColumn("Username");
        model.addColumn("Email");
        model.addColumn("Address");
        model.addColumn("Lat");
        model.addColumn("Lng");
        model.addColumn("Phone");
        model.addColumn("Website");
        model.addColumn("Company");
        tableData.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        labelAppName1 = new javax.swing.JLabel();
        btnExport = new javax.swing.JButton();
        labelDataTable1 = new javax.swing.JLabel();
        btnDelete1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableData.setAutoCreateRowSorter(true);
        tableData.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Name", "Username", "Email", "Adress", "Lat", "Lng", "Phone", "Website", "Company"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableData.setRowHeight(30);
        jScrollPane1.setViewportView(tableData);

        labelAppName1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        labelAppName1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAppName1.setText("APLICACIÃ“N JAVA JSON REST");

        btnExport.setText("Exportar datos a archivo .txt");
        btnExport.setToolTipText("");
        btnExport.setActionCommand("");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        labelDataTable1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelDataTable1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelDataTable1.setText("TABLA DE DATOS");

        btnDelete1.setText("Eliminar fila seleccionada");
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1232, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelDataTable1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(483, Short.MAX_VALUE)
                    .addComponent(labelAppName1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(473, 473, 473)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(labelDataTable1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(138, 138, 138))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addComponent(labelAppName1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(570, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        File file = new File("datos.txt");
        try {
            if (!file.exists()) {
            file.createNewFile();
            }
            
            FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);
            
            for (int i = 0; i < tableData.getRowCount(); i++) {
                for (int j = 0; j < tableData.getColumnCount(); j++) {
                    bw.write(tableData.getModel().getValueAt(i,j).toString() + "\t");
                }
                bw.newLine();
            }
            
            bw.close();
            fw.close();
            JOptionPane.showMessageDialog(this, "Datos exportados exitosamente en dist/datos.txt.");
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error. No se ha podido crear el archivo.");
        } 
        
    }//GEN-LAST:event_btnExportActionPerformed

    // Eliminar fila de la tabla.
    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        int row = tableData.getSelectedRow();
        // Verifica que se haya seleccionado una fila.
        if (row >= 0) {
            model.removeRow(row);
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila.");
        }
    }//GEN-LAST:event_btnDelete1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppJavaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppJavaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppJavaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppJavaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppJavaUI().setVisible(true);
                
            }
        });
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnExport;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelAppName1;
    private javax.swing.JLabel labelDataTable1;
    private javax.swing.JTable tableData;
    // End of variables declaration//GEN-END:variables
}



/*
    Client client = Client.create();
    WebResource webResource = client.resource("https://jsonplaceholder.typicode.com/users");
    ClientResponse response = webResource.type("application/json").get(ClientResponse.class);
    if (response.getStatus() != 200) {
        throw new RuntimeException("Error al invocar el servicio: " + response.getStatus());
    }
    String respuesta = response.getEntity(String.class);
    System.out.println("Respuesta: " + respuesta);
*/